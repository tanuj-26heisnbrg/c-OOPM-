// Example: define member function without argument within 
// the class 

#include <iostream> 
using namespace std; 

class Person { 
	int id; 
	char name[100]; 


public: 

	void set_p() 
	{ 
		cout << "Enter the Id:"; 
		cin >> id; 
		cout << "Enter the Name:"; 
		cin >> name; 
	} 

	void display_p() 
	{ 
		cout << endl <<"Id: "<< id << "\nName: " << name <<endl; 
	} 

}; 

class Student : private Person {    // SINGLE INHERITANCE
	char course[50]; 
	int fee; 

public: 

	void set_s() 
	{ 
		set_p(); 
		cout << "Enter the Course Name:"; 
		cin >> course; 
		cout << "Enter the Course Fee:"; 
		cin >> fee; 
	} 

	void display_s() 
	{ 
		display_p(); 
		cout <<"Course: "<< course << "\nFee: " << fee << endl; 
	} 
}; 

int main() 
{ 
	Student s; 
	s.set_s(); 
	s.display_s(); 
	return 0; 

}



******************************

///more examples of inheritance 

// example 1 

  #include <iostream>
using namespace std ;

class A {
    int a ,b ;
    public :
   A(int n1, int n2){
        cout << " inside constructor "<<endl ;
        a=n1;
        b=n2;
    }
    void display (){
        cout<<"A= "<<a<<endl ;
        cout<<"B= "<<b<<endl ;
        
    }
    ~A(){ cout << " inside destructor "<<endl ;}
};
class B : public A
{
    public : 
     B (int n1 , int n2 ): A ( n1 ,  n2)
     { cout << " inside constructor of  b " <<endl ;}
    
};

int main() {
    B f(9,8) ;
    f.display();


    return 0;
}

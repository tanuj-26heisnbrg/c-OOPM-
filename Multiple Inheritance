// simple program for multiple inheritance 

//CODE 1 for simple multiple inheritance  


#include <iostream>
using namespace std ;

class A {
    public: 
    int a ;
    A() { a=5 ;}
    
};
class B {
    public:
    int a ;
    B(){ a = 6 ;}
    
};

class C : public A , public B {
  public :
  void display (){
      
      cout << B::a ; // use of scope resolution operator to specify which class is to be called 
      // cout << A::a ;      to display the output of class A.
  }
    
};

int main() {
    C C1 ;
    C1.display() ;
    return 0;
}


// CODE 2 FOR CONSTRUCTOR CALLING IN MULTIPLE INHERITANCE 

/*  
#include <iostream>
using namespace std ;
 class A {
     
     public :
     int a ;
     A(){
        cout << " AA" ;
     }
 };
 
 class B {
     
     public :
     int b ;
     B(){ cout <<" BB " ;}
 };
 
 class C : B , A{    // THE CONSTRUCTORS OF PARENT CLASS WILL BE CALLED SEQUENCIALLY i.e. 1st B and then A and at lastly C's .
     
     public :
     C(){ cout <<" CC " ;}
 };

int main() {
    
   C C1;

    return 0;
}

*/
